name: personal_website
version: "0.0.0"
services:
  frontend:
    container_name: frontend_personal
    image: frontend
    restart: always
    env_file:
      - "personal_website.env"
    environment: 
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
    ports:
      - "4200:4200"
    networks:
      - personal_network
    volumes:
      - frontend:/frontend
  backend:
    container_name: backend_personal
    image: backend
    restart: always
    env_file:
     - "personal_website.env"
    environment:
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DB: ${SQL_PORT}
      SQL_USR: ${SQL_USR}
      SQL_PASS: ${SQL_PASS}
    ports:
      - "3000:3000"
    networks:
      - personal_network
    volumes:
      - backend:/backend
  db:
    container_name: db
    image: mysql:latest
    restart: always
    env_file:
      - "personal_website.env"
    environment:
      - MYSQL_DATABASE: ${SQL_DB}
      - MYSQL_USER: ${SQL_USR}
      - MYSQL_PASSWORD: ${SQL_PASS}
      - MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASS}
    ports:
      - "3306:3306"
    expose:
      - 3306
    volumes:
      - db:/var/lib/mysql
    networks:
      - personal_network
  nginx:
    container: proxy
    image: nginx:latest
    restart: always
      - ~/scripts/nginx:/usr/share/nginx/
networks:
  personal_network:
    driver: bridge

volumes:
  frontend:
  backend:
  db:


